apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'

configurations {
    domaGenRuntime
}

repositories {
    mavenCentral()
    maven {url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

dependencies {
	compile('org.seasar.doma.boot:doma-spring-boot-starter:1.0.2')
    domaGenRuntime 'org.seasar.doma:doma-gen:2.16.0'
    domaGenRuntime 'mysql:mysql-connector-java:5.1.41'
}

def javaDestDir='src/main/java'
def sqlDestDir= 'src/main/resources'
def dialectName= 'mysql'
def url= 'jdbc:mysql://localhost/workmanage'
def user= 'oaiuser'
def password= 'oai1115'
def entityPackageName= 'jp.co.orangearch.workManage.entity'
def superclassName="jp.co.orangearch.workManage.entity.TableSuffix"
def listenerSuperclassName="jp.co.orangearch.workManage.entity.TableSuffixListener"
def daoPackageName='jp.co.orangearch.workManage.dao'
def sqlTestClassName= 'jp.co.orangearch.workManage.SqlTest'
def sqlFilePattern= 'META-INF/**/*.sql'

task gen << {
    ant.taskdef(resource: 'domagentask.properties',
        classpath: configurations.domaGenRuntime.asPath)
    ant.gen(
			dialectName:"${dialectName}",
			url:"${url}",
            user:"${user}",
            password:"${password}") {
                entityConfig(
                    destdir:"${javaDestDir}",
//					superclassName:"${superclassName}",
//					listenerSuperclassName:"${listenerSuperclassName}",
                    packageName:"${entityPackageName}")
                daoConfig(
                    destdir:"${javaDestDir}",
                    packageName:"${daoPackageName}")
                sqlConfig(destdir:"${sqlDestDir}")
    }
}

task genTestCases << {
    ant.taskdef(resource: 'domagentask.properties',
        classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: '${url}', user: '${user}', password: '${password}') {
        sqlTestCaseConfig {
            fileset(dir: 'src/main/resources') {
                include(name: 'META-INF/**/*.sql')
            }
        }
    }
}
